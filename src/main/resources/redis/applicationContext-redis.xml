<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:redis="http://www.springframework.org/schema/redis"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://www.springframework.org/schema/redis http://www.springframework.org/schema/redis/spring-redis.xsd
         http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

    <mvc:default-servlet-handler />

    <mvc:annotation-driven/>

    <context:annotation-config/>



    <!--启用缓存注解功能，必须的，否则注解失效-->
    <cache:annotation-driven cache-manager="cacheManager"/>

    <!--redis链接池-->
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="30"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="1"/>
        <property name="maxWaitMillis" value="30000"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <property name="testWhileIdle" value="false"/>
    </bean>

    <!--redis工厂-->
    <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="192.168.99.100"/>
        <property name="port" value="32784"/>
        <property name="timeout" value="3000"/>
        <property name="usePool" value="true"/>
        <property name="poolConfig" ref="poolConfig"/>
    </bean>


    <!--redis方式存储session数据存储-->
    <bean id="redisHttpSessionConfiguration" class="org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration">
        <property name="maxInactiveIntervalInSeconds" value="600"/>
    </bean>


    <!--redis查询缓存配置-->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <property name="valueSerializer">
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
        </property>
    </bean>

    <bean id="cacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
        <constructor-arg ref="redisTemplate" />
    </bean>


  <bean id="redisMessageListener" class="com.tao.utils.jms.RedisMessageListener">
      <property name="redisTemplate" ref="redisTemplate"/>
  </bean>

   <bean id="rediscontainer" class="org.springframework.data.redis.listener.RedisMessageListenerContainer">
       <property name="connectionFactory"  ref="connectionFactory"/>
       <property name="messageListeners">
           <map>
               <entry key-ref="redisMessageListener">
                   <list>
                       <!-- 普通订阅，订阅具体的频道 -->

                       <bean class="org.springframework.data.redis.listener.ChannelTopic">
                           <constructor-arg value="topic.channel"/>
                       </bean>
                       <!-- 模式订阅，支持模式匹配订阅，*为模糊匹配符 -->
                       <bean class="org.springframework.data.redis.listener.PatternTopic">
                           <constructor-arg value="topic.*"/>
                       </bean>
                        <!--匹配所有通道-->
                       <bean class="org.springframework.data.redis.listener.PatternTopic">
                           <constructor-arg value="*"/>
                       </bean>
                   </list>
               </entry>
           </map>
       </property>
   </bean>

</beans>